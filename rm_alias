rm () {
    # START
    rf=0
    debug_switch=0
    incoming_array=()
    total_duration=TOTAL-TIME
    current_time=$(date "+%s")

    if [ ! -d $HOME/.rm_backup ]; then
        mkdir $HOME/.rm_backup;
    else
        destination="$HOME/.rm_backup/"
        for file in $destination{.,}*
        do
            file_time=$(stat ARGUMENTS $file)
            echo "The file: $file"
            if [ "$file" != $destination".usage" ] && [ "$file" != $destination'.' ] && [ "$file" != $destination".." ]; then
                if [ $(($file_time + $total_duration)) -lt $(($current_time)) ]; then
                    if [ -d $file ]; then /bin/rm -rf $file; else /bin/rm $file; fi
                fi
            fi
        done
    fi

    last_argument=$(echo $#)
    last_argument=$(($last_argument - 1))
    args=($@)

    if [ "${args[$last_argument]}" == "-error" ]; then debug_switch=1; fi

    while [ $# -gt 0 ];
    do
        if [ $debug_switch -eq 1 ]; then echo "Looking at: $1"; fi
        if [ "$1" == "-rf" ]; then rf=1; shift; continue; fi
        if [ "$1" == "-error" ]; then shift; continue; fi
        if [[ "$1" ==  ""* ]]; then
            len=$(echo $1 | tr -cd '*' | wc -c)
            if [ $len -eq 1 ]; then

                # If there is one star found then its not in correct spot.

                if [ $debug_switch -eq 1 ]; then echo "There are two reasons as to why the following doesn't work..."; fi
                if [ $debug_switch -eq 1 ]; then echo "The directory that you entered is incorrect or This command is hard to support so don't use it..."; fi
                echo "The argument: $1 has an error, use the -error argument."
                return
            elif [ $len -eq 2 ]; then

                # If there is two stars found then its not in the correct spot.

                if [ $debug_switch -eq 1 ]; then echo "You have the stars in the incorrect places dude..."; fi
                echo "The argument: $1 is incorrect."
                return
            elif [ $len -ge 2 ]; then
                if [ $debug_switch -eq 1 ]; then echo "There are to many stars dude..."; fi
                echo "The argument: $1 is incorrect."
                return
            fi
        fi

        if [ -d $1 ] || [ -f $1 ]; then
            if [ $debug_switch -eq 1 ]; then echo "Going into the array: $1"; fi
            incoming_array+=($1)
        else
            echo "This is not a file or directory: $1 "
        fi

        shift
    done

    for item in "${incoming_array[@]}"; do
        if [ $debug_switch -eq 1 ]; then echo "Processing: $item"; fi

        if [ $rf -eq 1 ]; then 
        #   /bin/rm -rf $item
            touch $item
            if [ $debug_switch -eq 1 ]; then echo "Backing up the following item: $item"; fi
            mv $item $HOME/.rm_backup
            if [ $debug_switch -eq 1 ]; then echo "Deleting the following item: $item"; fi
            /bin/rm -rf $item
        else
            if [ -f $item ]; then
                touch $item
                if [ $debug_switch -eq 1 ]; then echo "Backing up the following item: $item"; fi
                mv $item $HOME/.rm_backup
                if [ $debug_switch -eq 1 ]; then echo "Deleting the following item: $item"; fi
                /bin/rm $item
            else
                echo "Can't delete the following: $item, because its a directory."
            fi
        fi
    done
    # END
}